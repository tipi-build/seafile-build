name: build
# This workflow is  triggered on pushes, pull requests to the repository.
on:
  push:
    branches:
      - main
      - develop
  pull_request:
env:
  version_in_development: v0.0.1

jobs:
  build-linux:
    name: build-linux
    runs-on: ubuntu-20.04
    container: ubuntu:16.04
    steps:
      - uses: actions/checkout@v2
      - name: build seafile
        run: |
          mv ./seaf-daemon  ~/
          cd ~/
          #install deps 
          apt update -y
          apt install sudo -y
          sudo apt-get install autoconf automake libtool libevent-dev libcurl4-openssl-dev libgtk2.0-dev uuid-dev intltool libsqlite3-dev valac libjansson-dev cmake qtchooser qtbase5-dev libqt5webkit5-dev qttools5-dev qttools5-dev-tools libssl-dev wget zip unzip  -y
          #install downloads repo
          wget --content-disposition -nc https://github.com/haiwen/libsearpc/archive/v3.2.0.tar.gz  
          wget --content-disposition -nc https://github.com/haiwen/seafile/archive/v8.0.3.tar.gz
          wget --content-disposition -nc https://github.com/haiwen/seafile-client/archive/v8.0.3.tar.gz
          #unarchive
          mkdir ./archive
          cp libsearpc-3.2.0.tar.gz ./archive
          cp seafile-8.0.3.tar.gz ./archive
          cp seafile-client-8.0.3.tar.gz ./archive
          tar xf libsearpc-3.2.0.tar.gz
          tar xf seafile-8.0.3.tar.gz
          tar xf seafile-client-8.0.3.tar.gz
          rm -rf libsearpc-3.2.0.tar.gz 
          rm -rf seafile-8.0.3.tar.gz
          rm -rf seafile-client-8.0.3.tar.gz

          #build seafile
          export PREFIX=/usr
          export PKG_CONFIG_PATH="$PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"
          export PATH="$PREFIX/bin:$PATH"

          # enable build optimizations
          export CFLAGS="-O3 -pipe"
          export CXXFLAGS="-O3 -pipe"

          cd libsearpc-3.2.0
          ./autogen.sh
          ./configure --prefix=$PREFIX
          make -j$(nproc)
          sudo make install
          cd ..
          cd seafile-8.0.3/
          ./autogen.sh
          ./configure --prefix=$PREFIX --disable-fuse
          make -j$(nproc)
          sudo make install
          cd ..
          cd seafile-client-8.0.3/
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_CXX_FLAGS_RELEASE="-O3" .
          make -j$(nproc)
          sudo make install
          cd ..
          # create usefull dir 
          mkdir -p ~/tipi_seafile_client/daemon/lib
          mkdir -p ~/tipi_seafile_client/seafile
          mkdir -p ~/tipi_seafile_client/pysearpc

          # recover all we need 
          cp /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libcurl.so.4 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libevent_pthreads-2.0.so.5 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libevent-2.0.so.5 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libevent_core-2.0.so.5 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libjansson.so.4 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libidn.so.11 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libsasl2.so.2 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/libsearpc.so.1 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libsqlite3.so.0 ~/tipi_seafile_client/daemon/lib
          cp /lib/x86_64-linux-gnu/libssl.so.1.0.0 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libtasn1.so.6 ~/tipi_seafile_client/daemon/lib
          cp /lib/x86_64-linux-gnu/libuuid.so.1 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libwind.so.0 ~/tipi_seafile_client/daemon/lib
          cp /lib/x86_64-linux-gnu/libz.so.1 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/librtmp.so.1 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/liblber-2.4.so.2 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libldap_r-2.4.so.2 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libhogweed.so.4 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libnettle.so.6 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libgssapi.so.3 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libheimntlm.so.0 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libkrb5.so.26 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libasn1.so.8 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libhcrypto.so.4 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libroken.so.18 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libheimbase.so.1 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libhx509.so.5 ~/tipi_seafile_client/daemon/lib
          cp /lib/x86_64-linux-gnu/libcrypt.so.1 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0  ~/tipi_seafile_client/daemon/lib
          cp /lib/x86_64-linux-gnu/libglib-2.0.so.0 ~/tipi_seafile_client/daemon/lib
          cp /usr/lib/x86_64-linux-gnu/libffi.so.6 ~/tipi_seafile_client/daemon/lib
          cp /lib/x86_64-linux-gnu/libpcre.so.3 ~/tipi_seafile_client/daemon/lib
          cp /usr/bin/seaf-daemon ~/tipi_seafile_client/daemon/seaf-daemon-bin
          cp /usr/bin/seaf-cli ~/tipi_seafile_client/
          mv ~/seaf-daemon ~/tipi_seafile_client/daemon/
          chmod +x ~/tipi_seafile_client/daemon/seaf-daemon

          cp -a ~/seafile-8.0.3/python/seafile ~/tipi_seafile_client/
          rm -rf ~/tipi_seafile_client/seafile/Make*

          cp -a ~/libsearpc-3.2.0/pysearpc ~/tipi_seafile_client/
          rm -rf ~/tipi_seafile_client/pysearpc/Make*
          rm -rf ~/tipi_seafile_client/pysearpc/test*

          zip -r tipi_seafile_client.zip  tipi_seafile_client/
          cp tipi_seafile_client.zip tipi_seafile_client_artifact.zip
      - uses: actions/upload-artifact@v3
        with:
          name: seafile_artifact
          path:  ~/tipi_seafile_client_artifact.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          owner: nxxm 
          repo: seafile-build
          commitish: main
          tag_name: ${{ env.version_in_development }}
          release_name: ${{ env.version_in_development }} ${{ github.sha }}
          draft: true
          prerelease: true 
      - name: Upload tipi seafile package
        id: upload-tipi-seafile-package 
        uses: actions/upload-release-asset@v1
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ~/tipi_seafile_client.zip
          asset_name: tipi-${{ env.version_in_development }}-seafile-linux.zip
          asset_content_type: application/zip





